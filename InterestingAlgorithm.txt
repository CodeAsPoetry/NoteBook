第1章：算法之美

1. 考查算法的最坏情况对衡量算法的好坏具有实际的意义。

2. 算法运行需要时需要的辅助空间是衡量空间复杂度的关键因素。

3. 递归调用，包括递推和回归。递推是将原问题不断分解成子问题，直到达到结束条件，返回最近子问题的解；然后逆向逐一回归，最终到达递推开始的原问题，返回原问题的解。

4. O(2^n)<O(n!)<O(n^n)

5. 特征方程和通项公式的推导：详见个人博客https://codeaspoetry.github.io/

6. 斐波那契数列时间复杂度/空间复杂度：O(常数^n)/O(1)，O(n)/O(n)，O(n)/O(1)，（待考查）O(log n)/未知。

7. 心得：真的被斐波那契数列的美震撼了，瞬间想买《数学之美》看看。。。。。。。。。。。。。。。。。。。。。。。。。。

6. 取模：求商时向负无穷方向舍入；取余：求商时向0方向舍入 -7对4取余为-3；-7对4取模为+1

7. 哥德巴赫猜想：任一大于2的偶数，都可表示成两个素数之和


第二章：贪心算法

1. 一个贪心算法总是做出当前最好的选择，也就是说，它期望通过局部最优选择从而得到全局最优的解决方案。————《算法导论》

2. 利用贪心算法求解的问题往往具有两个重要的特性：贪心选择性质和最优子结构性质。

3. 选择排序、冒泡排序使用了贪心算法。

4. 物品可分割的装载问题称为背包问题，物品不可分割的装载问题称为0-1背包问题。

5. 加勒比海盗(选择最轻的)、阿里巴巴与四十大盗(可以分割，选择性价比最高的)、会议安排(选择具有最早结束时间且与已安排的会议相容的会议安排)、最短路径

6. Edsger Wybe Dijkstra和Donald Ervin Knuth并称为我们这个时代最伟大的计算机科学家。

7. Dijkstra算法：解决单源最短路径问题的贪心算法。(这是我见到的最透彻的讲解)

